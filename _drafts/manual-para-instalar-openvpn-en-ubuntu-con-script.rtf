{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <item>\
		<title>Manual para instalar OpenVPN en Ubuntu con script</title>\
		<link>https://rocreguant.com/manual-para-instalar-openvpn-en-ubuntu-con-script/941/</link>\
		<pubDate>Tue, 20 Oct 2015 17:06:34 +0000</pubDate>\
		<dc:creator><![CDATA[roc]]></dc:creator>\
		<guid isPermaLink="false">http://rocreguant.com/?p=941</guid>\
		<description></description>\
		<content:encoded><![CDATA[<p style="text-align: justify;">Hace ya algun tiempo me hice con un servidor y lo voy usando para hacer mis cosicas. Como por ejemplo <a href="http://rocreguant.com/como-usar-rtorrent-des-de-cero/925/">instalar rTorrent para poder bajarme ficheros</a> el cual estuvo acompa\'f1ado de otro post para <a href="http://rocreguant.com/como-mover-ficheros-del-servidor-a-mi-ordenador-y-viceversa-usando-la-consola/918/">mover ficheros entre el servidor y mi ordenador</a>. Esta vez lo que quiero hacer es usar el server como t\'fanel para evitar contenidos restringidos en el pa\'eds d\'f3nde estoy y mejorar la seguridad en redes abiertas.\
Primero de todo tendremos que instalar el software necesario. Para ello ejecutando la siguiente linea en la consola bastar\'e1:</p>\
\
<pre style="text-align: justify;">wget http://git.io/vpn --no-check-certificate -O openvpn-install.sh; chmod +x openvpn-install.sh; ./openvpn-install.sh</pre>\
<p style="text-align: justify;">Para los que os gusta hacerlo paso a pasa y configurarlo todo al mil\'edmetro al final del post hay un link (en ingl\'e9s) que os ayudar\'e1. Para el resto de mortales el siguiente <a href="https://github.com/Nyr/openvpn-install/blob/master/openvpn-install.sh">script</a> lo hace todo, es simplemente un autoinstaller que puede generar claves, revocar certificados y desinstalar OpenVPN.</p>\
\
\
[code language="bash"]\
#!/bin/bash\
# OpenVPN road warrior installer for Debian-based distros\
\
# This script will only work on Debian-based systems. It isn't bulletproof but\
# it will probably work if you simply want to setup a VPN on your Debian/Ubuntu\
# VPS. It has been designed to be as unobtrusive and universal as possible.\
\
if [ $USER != 'root' ]; then\
echo &quot;Sorry, you need to run this as root&quot;\
exit\
fi\
\
if [ ! -e /dev/net/tun ]; then\
echo &quot;TUN/TAP is not available&quot;\
exit\
fi\
\
if [ ! -e /etc/debian_version ]; then\
echo &quot;Looks like you aren't running this installer on a Debian-based system&quot;\
exit\
fi\
\
# Try to get our IP from the system and fallback to the Internet.\
# I do this to make the script compatible with NATed servers (lowendspirit.com)\
# and to avoid getting an IPv6.\
IP=$(ifconfig | grep 'inet addr:' | grep -v inet6 | grep -vE '127\\.[0-9]\{1,3\}\\.[0-9]\{1,3\}\\.[0-9]\{1,3\}' | cut -d: -f2 | awk '\{ print $1\}' | head -1)\
if [ &quot;$IP&quot; = &quot;&quot; ]; then\
IP=$(wget -qO- ipv4.icanhazip.com)\
fi\
\
if [ -e /etc/openvpn/server.conf ]; then\
while :\
do\
clear\
echo &quot;Looks like OpenVPN is already installed&quot;\
echo &quot;What do you want to do?&quot;\
echo &quot;&quot;\
echo &quot;1) Add a cert for a new user&quot;\
echo &quot;2) Revoke existing user cert&quot;\
echo &quot;3) Remove OpenVPN&quot;\
echo &quot;4) Exit&quot;\
echo &quot;&quot;\
read -p &quot;Select an option [1-4]: &quot; option\
case $option in\
1)\
echo &quot;&quot;\
echo &quot;Tell me a name for the client cert&quot;\
echo &quot;Please, use one word only, no special characters&quot;\
read -p &quot;Client name: &quot; -e -i client CLIENT\
cd /etc/openvpn/easy-rsa/2.0/\
source ./vars\
# build-key for the client\
export KEY_CN=&quot;$CLIENT&quot;\
export EASY_RSA=&quot;$\{EASY_RSA:-.\}&quot;\
&quot;$EASY_RSA/pkitool&quot; $CLIENT\
# Let's generate the client config\
mkdir ~/ovpn-$CLIENT\
cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/ovpn-$CLIENT/$CLIENT.conf\
cp /etc/openvpn/easy-rsa/2.0/keys/ca.crt ~/ovpn-$CLIENT\
cp /etc/openvpn/easy-rsa/2.0/keys/$CLIENT.crt ~/ovpn-$CLIENT\
cp /etc/openvpn/easy-rsa/2.0/keys/$CLIENT.key ~/ovpn-$CLIENT\
cd ~/ovpn-$CLIENT\
sed -i &quot;s|cert client.crt|cert $CLIENT.crt|&quot; $CLIENT.conf\
sed -i &quot;s|key client.key|key $CLIENT.key|&quot; $CLIENT.conf\
tar -czf ../ovpn-$CLIENT.tar.gz $CLIENT.conf ca.crt $CLIENT.crt $CLIENT.key\
cd ~/\
rm -rf ovpn-$CLIENT\
echo &quot;&quot;\
echo &quot;Client $CLIENT added, certs available at ~/ovpn-$CLIENT.tar.gz&quot;\
exit\
;;\
2)\
echo &quot;&quot;\
echo &quot;Tell me the existing client name&quot;\
read -p &quot;Client name: &quot; -e -i client CLIENT\
cd /etc/openvpn/easy-rsa/2.0/\
. /etc/openvpn/easy-rsa/2.0/vars\
. /etc/openvpn/easy-rsa/2.0/revoke-full $CLIENT\
# If it's the first time revoking a cert, we need to add the crl-verify line\
if grep -q &quot;crl-verify&quot; &quot;/etc/openvpn/server.conf&quot;; then\
echo &quot;&quot;\
echo &quot;Certificate for client $CLIENT revoked&quot;\
else\
echo &quot;crl-verify /etc/openvpn/easy-rsa/2.0/keys/crl.pem&quot; &gt;&gt; &quot;/etc/openvpn/server.conf&quot;\
/etc/init.d/openvpn restart\
echo &quot;&quot;\
echo &quot;Certificate for client $CLIENT revoked&quot;\
fi\
exit\
;;\
3)\
apt-get remove --purge -y openvpn openvpn-blacklist\
rm -rf /etc/openvpn\
rm -rf /usr/share/doc/openvpn\
sed -i '/--dport 53 -j REDIRECT --to-port/d' /etc/rc.local\
sed -i '/iptables -t nat -A POSTROUTING -s 10.8.0.0/d' /etc/rc.local\
echo &quot;&quot;\
echo &quot;OpenVPN removed!&quot;\
exit\
;;\
4) exit;;\
esac\
done\
else\
echo 'Welcome to this quick OpenVPN &quot;road warrior&quot; installer'\
echo &quot;&quot;\
# OpenVPN setup and first user creation\
echo &quot;I need to ask you a few questions before starting the setup&quot;\
echo &quot;You can leave the default options and just press enter if you are ok with them&quot;\
echo &quot;&quot;\
echo &quot;First I need to know the IPv4 address of the network interface you want OpenVPN&quot;\
echo &quot;listening to.&quot;\
read -p &quot;IP address: &quot; -e -i $IP IP\
echo &quot;&quot;\
echo &quot;What port do you want for OpenVPN?&quot;\
read -p &quot;Port: &quot; -e -i 1194 PORT\
echo &quot;&quot;\
echo &quot;Do you want OpenVPN to be available at port 53 too?&quot;\
echo &quot;This can be useful to connect under restrictive networks&quot;\
read -p &quot;Listen at port 53 [y/n]: &quot; -e -i n ALTPORT\
echo &quot;&quot;\
echo &quot;Finally, tell me your name for the client cert&quot;\
echo &quot;Please, use one word only, no special characters&quot;\
read -p &quot;Client name: &quot; -e -i client CLIENT\
echo &quot;&quot;\
echo &quot;Okay, that was all I needed. We are ready to setup your OpenVPN server now&quot;\
read -n1 -r -p &quot;Press any key to continue...&quot;\
apt-get update\
apt-get install openvpn iptables openssl -y\
cp -R /usr/share/doc/openvpn/examples/easy-rsa/ /etc/openvpn\
# easy-rsa isn't available by default for Debian Jessie and newer\
if [ ! -d /etc/openvpn/easy-rsa/2.0/ ]; then\
wget --no-check-certificate -O ~/easy-rsa.tar.gz https://github.com/OpenVPN/easy-rsa/archive/2.2.2.tar.gz\
tar xzf ~/easy-rsa.tar.gz -C ~/\
mkdir -p /etc/openvpn/easy-rsa/2.0/\
cp ~/easy-rsa-2.2.2/easy-rsa/2.0/* /etc/openvpn/easy-rsa/2.0/\
rm -rf ~/easy-rsa-2.2.2\
rm -rf ~/easy-rsa.tar.gz\
fi\
cd /etc/openvpn/easy-rsa/2.0/\
# Let's fix one thing first...\
cp -u -p openssl-1.0.0.cnf openssl.cnf\
# Fuck you NSA - 1024 bits was the default for Debian Wheezy and older\
sed -i 's|export KEY_SIZE=1024|export KEY_SIZE=2048|' /etc/openvpn/easy-rsa/2.0/vars\
# Create the PKI\
. /etc/openvpn/easy-rsa/2.0/vars\
. /etc/openvpn/easy-rsa/2.0/clean-all\
# The following lines are from build-ca. I don't use that script directly\
# because it's interactive and we don't want that. Yes, this could break\
# the installation script if build-ca changes in the future.\
export EASY_RSA=&quot;$\{EASY_RSA:-.\}&quot;\
&quot;$EASY_RSA/pkitool&quot; --initca $*\
# Same as the last time, we are going to run build-key-server\
export EASY_RSA=&quot;$\{EASY_RSA:-.\}&quot;\
&quot;$EASY_RSA/pkitool&quot; --server server\
# Now the client keys. We need to set KEY_CN or the stupid pkitool will cry\
export KEY_CN=&quot;$CLIENT&quot;\
export EASY_RSA=&quot;$\{EASY_RSA:-.\}&quot;\
&quot;$EASY_RSA/pkitool&quot; $CLIENT\
# DH params\
. /etc/openvpn/easy-rsa/2.0/build-dh\
# Let's configure the server\
cd /usr/share/doc/openvpn/examples/sample-config-files\
gunzip -d server.conf.gz\
cp server.conf /etc/openvpn/\
cd /etc/openvpn/easy-rsa/2.0/keys\
cp ca.crt ca.key dh2048.pem server.crt server.key /etc/openvpn\
cd /etc/openvpn/\
# Set the server configuration\
sed -i 's|dh dh1024.pem|dh dh2048.pem|' server.conf\
sed -i 's|;push &quot;redirect-gateway def1 bypass-dhcp&quot;|push &quot;redirect-gateway def1 bypass-dhcp&quot;|' server.conf\
sed -i &quot;s|port 1194|port $PORT|&quot; server.conf\
# Obtain the resolvers from resolv.conf and use them for OpenVPN\
cat /etc/resolv.conf | grep -v '#' | grep 'nameserver' | grep -E -o '[0-9]\{1,3\}\\.[0-9]\{1,3\}\\.[0-9]\{1,3\}\\.[0-9]\{1,3\}' | while read line; do\
sed -i &quot;/;push \\&quot;dhcp-option DNS 208.67.220.220\\&quot;/a\\push \\&quot;dhcp-option DNS $line\\&quot;&quot; server.conf\
done\
# Listen at port 53 too if user wants that\
if [ $ALTPORT = 'y' ]; then\
iptables -t nat -A PREROUTING -p udp -d $IP --dport 53 -j REDIRECT --to-port $PORT\
sed -i &quot;/# By default this script does nothing./a\\iptables -t nat -A PREROUTING -p udp -d $IP --dport 53 -j REDIRECT --to-port $PORT&quot; /etc/rc.local\
fi\
# Enable net.ipv4.ip_forward for the system\
sed -i 's|#net.ipv4.ip_forward=1|net.ipv4.ip_forward=1|' /etc/sysctl.conf\
# Avoid an unneeded reboot\
echo 1 &gt; /proc/sys/net/ipv4/ip_forward\
# Set iptables\
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j SNAT --to $IP\
sed -i &quot;/# By default this script does nothing./a\\iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j SNAT --to $IP&quot; /etc/rc.local\
# And finally, restart OpenVPN\
/etc/init.d/openvpn restart\
# Let's generate the client config\
mkdir ~/ovpn-$CLIENT\
# Try to detect a NATed connection and ask about it to potential LowEndSpirit\
# users\
EXTERNALIP=$(wget -qO- ipv4.icanhazip.com)\
if [ &quot;$IP&quot; != &quot;$EXTERNALIP&quot; ]; then\
echo &quot;&quot;\
echo &quot;Looks like your server is behind a NAT!&quot;\
echo &quot;&quot;\
echo &quot;If your server is NATed (LowEndSpirit), I need to know the external IP&quot;\
echo &quot;If that's not the case, just ignore this and leave the next field blank&quot;\
read -p &quot;External IP: &quot; -e USEREXTERNALIP\
if [ $USEREXTERNALIP != &quot;&quot; ]; then\
IP=$USEREXTERNALIP\
fi\
fi\
# IP/port set on the default client.conf so we can add further users\
# without asking for them\
sed -i &quot;s|remote my-server-1 1194|remote $IP $PORT|&quot; /usr/share/doc/openvpn/examples/sample-config-files/client.conf\
cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/ovpn-$CLIENT/$CLIENT.conf\
cp /etc/openvpn/easy-rsa/2.0/keys/ca.crt ~/ovpn-$CLIENT\
cp /etc/openvpn/easy-rsa/2.0/keys/$CLIENT.crt ~/ovpn-$CLIENT\
cp /etc/openvpn/easy-rsa/2.0/keys/$CLIENT.key ~/ovpn-$CLIENT\
cd ~/ovpn-$CLIENT\
sed -i &quot;s|cert client.crt|cert $CLIENT.crt|&quot; $CLIENT.conf\
sed -i &quot;s|key client.key|key $CLIENT.key|&quot; $CLIENT.conf\
tar -czf ../ovpn-$CLIENT.tar.gz $CLIENT.conf ca.crt $CLIENT.crt $CLIENT.key\
cd ~/\
rm -rf ovpn-$CLIENT\
echo &quot;&quot;\
echo &quot;Finished!&quot;\
echo &quot;&quot;\
echo &quot;Your client config is available at ~/ovpn-$CLIENT.tar.gz&quot;\
echo &quot;If you want to add more clients, you simply need to run this script another time!&quot;\
fi\
[/code]\
\
<p style="text-align: justify;">"Happy <em>tunneling</em>"</p>\
<p style="text-align: justify;"><em><strong>Bonus:</strong> Para los que os guste un poco m\'e1s el heavy metal <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-openvpn-server-on-ubuntu-14-04">aqu\'ed</a> un tutorial paso a paso con explicaciones m\'e1s detalladas.</em></p>]]></content:encoded>\
\
}